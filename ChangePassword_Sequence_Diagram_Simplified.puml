@startuml Change Password Sequence Diagram - Simplified
!theme plain
title Sequence Diagram - Change Password Feature (Simplified)

participant "Client" as C
participant "ChangePasswordPage" as CPP
participant "ChangePasswordController" as CPC
participant "UserRepository" as UR
participant "UserAdmin" as UA
participant "Database" as DB

== Change Password Flow ==

C -> CPP: 1: enter current password
C -> CPP: 2: enter new password
C -> CPP: 3: confirm new password
C -> CPP: 4: submit change password request
activate CPP

CPP -> CPP: 5: validate password match
note right: Check if newPassword == confirmNewPassword

alt [Passwords match]
    CPP -> CPC: submit change password request
    activate CPC
    
    CPC -> CPC: 6: extract user ID from token
    note right: Get userId from JWT token
    
    CPC -> UR: 7: getUserById(userId)
    activate UR
    UR -> DB: query user by ID
    activate DB
    DB --> UR: user data
    deactivate DB
    UR --> CPC: 8: user object
    deactivate UR
    
    alt [User exists]
        CPC -> UA: 9: checkCurrentPassword(user, currentPassword)
        activate UA
        UA -> UA: 10: verifyPassword(currentPassword, user.PasswordHash)
        note right: Use BCrypt.Verify()
        UA --> CPC: 11: password valid (true/false)
        deactivate UA
        
        alt [Current password correct]
            CPC -> CPC: 12: validate new password strength
            note right: Check length, complexity, etc.
            
            alt [New password valid]
                CPC -> UA: 13: hashNewPassword(newPassword)
                activate UA
                UA -> UA: 14: BCrypt.HashPassword(newPassword)
                UA --> CPC: 15: hashed password
                deactivate UA
                
                CPC -> UR: 16: updateUserPassword(userId, hashedPassword)
                activate UR
                UR -> DB: update user password
                activate DB
                DB --> UR: update success
                deactivate DB
                UR --> CPC: 17: password updated
                deactivate UR
                
                CPC --> CPP: 18: change password response (success)
                deactivate CPC
                
                CPP -> C: 19: display success message
                CPP -> CPP: 20: close form
                deactivate CPP
                
            else [New password invalid]
                CPC --> CPP: error - new password invalid
                deactivate CPC
                
                CPP -> C: display validation error
                deactivate CPP
            end
            
        else [Current password incorrect]
            CPC --> CPP: error - current password incorrect
            deactivate CPC
            
            CPP -> C: display error message
            deactivate CPP
        end
        
    else [User not found]
        CPC --> CPP: error - user not found
        deactivate CPC
        
        CPP -> C: display error message
        deactivate CPP
    end
    
else [Passwords don't match]
    CPP -> C: display error - passwords don't match
    deactivate CPP
end

@enduml 